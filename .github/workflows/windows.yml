# This is a basic workflow to help you get started with Actions

name: Windows Test

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted
    strategy:
      matrix:
        python-version: [ '2.x', '3.3', '3.4', '3.5', '3.6', '3.7', '3.8', 'pypy-2.7', 'pypy-3.6', 'pypy-3.7' ]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout git
        uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      # Show runner ID
      - name: Run a one-line script
        run: echo "I am git runner $env:COMPUTERNAME ;)"
        shell: powershell
      
      # Show python version
      - name: Show python Version 
        run: python -c "import sys; print(sys.version)"

      # Pylint
      - name: Run pylint
        run: python -m pylint
        
  finish:
    runs-on: self-hosted
    steps:
      - name: Prepare for Shutdown with a grace time of 30 seconds
        run: shutdown -s -t 60
        shell: cmd
            
